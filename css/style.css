:root { /** el :root se usa para crear variables. Se aplican como codigo con la propiedad "var(--variable) **/
    --blanco: #ffffff;
    --primario: #FFC107;
    --secundario: #0097A7;
    --gris: #757575;
    --oscuro: #212121;
    --grisclaro: #dfe9f3;
}
html {
    font-size: 62.5%;
    box-sizing: border-box; /** hack para eliminar el modelo caja de css **/
    min-height: 100%; /** propiedad que sirve para determinar la altura minima de un elemento especifico **/
    /** scroll-snap-type: y mandatory; Y agrega scroll de manera horizontal. X agrega scroll de manera vertical **/
}
/** .servicios,
.navegacion-principal,
.formulario {
    scroll-snap-align: center;
    scroll-snap-stop: always; **/
}
*, *:before, *:after {
    box-sizing: inherit; /** hack para eliminar el modelo caja de css **/
}
p {
    line-height: 2; /** propiedad para modificar el interlineado del texto. el valor es numerico **/
}
body {
    font-size: 16px;
    font-family: 'Krub', sans-serif;
    background-image: linear-gradient(to top, var(--grisclaro) 0%, var(--blanco) 100%);
    min-height: 100%;
}
h1 {
    font-size: 3.8rem;
}
h2 {
    font-size: 2.8rem;
}
h3 {
    color: var(--secundario);
    font-weight: 400;
    font-size: 1.8rem;
}
h1, h2, h3 {
    text-align: center; /** propiedad para alinear el texto **/
}
h1 span {
    font-size: 1.4rem;
}
.titulo p,
.titulo {
    line-height: .6;
}
.titulo p {
    font-size: 3rem;
}
.contenedor {
    max-width: 90rem; /** propiedad que sirve para determinar la anchura maxima de un elemento especifico **/
    margin: 0 auto;
}
.sombra {
    -webkit-box-shadow: 0px 11px 15px -9px rgba(0,0,0,0.63);
    -moz-box-shadow: 0px 11px 15px -9px rgba(0,0,0,0.63);
    box-shadow: 0px 11px 15px -9px rgba(0,0,0,0.63);
    background-color: var(--blanco);
    padding: 2rem;
    border-radius: 1rem; /** propiedad para especificar el redondeo de extremos **/
}
.nav-bg {
    background-color: var(--secundario);
}
.navegacion-principal {
    display: flex; /** La propiedad de display flex, ayuda a colocar las cajas como si fueran celdas de tablas, con un comportamiento predecible y adaptable. **/
    flex-direction: column; /** alinea elementos en una sola direccion. Izquierda a dderecha, o arriba a abajo **/
}
@media (min-width: 768px) {
    .navegacion-principal{
        flex-direction: row; /** alinea elementos en las dos dimenciones. Izquierda a derecha y de arriba a abajo **/
        justify-content: space-around;
    }
}
.navegacion-principal a {
    display: block;
    text-align: center;
    color: var(--blanco);
    text-decoration: none;
    font-size: 2rem;
    font-weight: bold;
    padding: 1rem; /** La propiedad padding establece el espacio de relleno requerido por todos los lados de un elemento. El área de padding es el espacio entre el contenido del elemento y su borde (border) **/
}
.navegacion-principal a:hover {
    background-color: var(--primario);
    color: var(--oscuro);
}
.navegacion {
    display: flex; 
    flex-direction: column;
    align-items: center; /** al tener displey:flex y flex-direction:column align.items alinea de manera horizontal **/
}
@media (min-width:768px) {
    .navegacion {
        flex-direction: row;
        justify-content: space-between;
    }
}
.navegacion a {
    padding: 1rem 2rem;
    color: var(--blanco);
    text-decoration: none;
    font-size: 1.4rem;
    font-weight: 700; /** establece el grosor de la tipografia: bold o 700 / normal o 400 **/
}
.navegacion a:hover {
    background-color: var(--primario);
    color: var(--oscuro);
}
.navegacion a:last-of-type {
    margin-bottom:0;
}
@media (min-width:768px) {
    .navegacion a{
        margin-bottom: 0; /** propiedad de un elemento que establece el espacio requerido en la parte inferior de un elemento **/
    }
}
.hero {
    background-image: url(../img/diseño\ web.jpeg);
    background-repeat: no-repeat;
    background-size: cover;
    height: 450px;
    margin-bottom: 2rem;
    position: relative;
}
.contenido-hero {
    background-color: rgb(0 0 0 / 70%); /** Otra opción **/
    background-color: rgba(0, 0, 0, 0.7);
    position: absolute;
    width: 100%;
    height: 100%;
    display: flex; /* Displey Flex: Horizontal con JustifyContent y Verical con AlignItemns*/
    flex-direction: column;
    align-items: center;
    justify-content: center; /** al tener displey:flex y flex-direction:column alinea de manera vertical **/
}
.contenido-hero h2, /* La , coma es porque se aplica el mismo css a ambas clases y elementos de HTML */
.contenido-hero p {
    color: var(--blanco);
}
.contenido-hero h2 {
    font-size: 3.8rem;
}
.ubicacion {
    display: flex;
    align-items: flex-end;
}
.boton {
    background-color: var(--secundario);
    color: var(--blanco);
    padding: 1rem 3rem;
    margin-top: 1rem;
    font-size: 2rem;
    text-decoration: none;
    text-transform: uppercase;
    font-weight: 700;
    border-radius: .5rem;
    width: 90%;
    text-align: center;
    border: none; /** este afecta solo al input de ENVIAR ubicado en el FORM **/
}
@media (min-width: 768px) {
    .boton {
        width: auto;
    }
}
.boton:hover{
    cursor: pointer; /** aplica la"manito" para enlaces **/
}
@media (min-width:768px) {
    .servicios {
        display: grid; 
        grid-template-columns: 33.33% 33.33% 33.33%;
        grid-template-columns: 1fr 1fr 1fr;
        grid-template-columns: repeat (3, 1fr);
        column-gap: 1rem;
    }
}
.servicio {
    display: flex;
    flex-direction: column;
    align-items: center;
}
.servicio h3 {
    color: var(--secundario);
    font-weight: normal;
    font-weight: 400; /* Normal y 400 es lo mismo*/
}
.servicio p {
    line-height: 2;
    text-align: center;
}
.servicio .iconos {
    height: 13rem;
    width: 13rem;
    background-color: var(--primario);
    border-radius: 50%;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
}
.formulario {
    background-color: var(--gris);
    width: min( 60rem, 100% ); /** min usa el valor mas pequeño **/
    margin: 0 auto; /** usar siempre que tenga un elemento tipo form por ej cuyo padre no es un displey flex, por ende no tengo acceso a justify-content **/
    padding: 2rem;
    border-radius: 1rem;
}
.formulario legend {
    color: var(--primario);
    text-align: center;
    font-size: 1.8rem;
    text-transform: uppercase;
    font-weight: 700;
    margin-bottom: 2rem;
}
.formulario fieldset {
    border: none;
}

@media (min-width: 768px) {
    .contenedor-campos {
        display: grid;
        grid-template-columns: repeat(2, 1fr); /** agrega colmnas. 2 columnas del musmo ancho cada una, por eso es 2, 1fr **/
        grid-template-rows: auto auto 20rem;
        column-gap: 2rem; /** separacion de columnas **/
    }
}
.campo:nth-child(3),
.campo:nth-child(4) {
    grid-column: 1 / 3; /** grid-column se usa para posicionar las columnas donde corresponde. 1 / 3 significa que ese campo va desde la columna 1 a la 3, abarcando toda el area que debe abarcar **/
}
.campo {
    margin-bottom: 1rem;
}
.campo label {
     color: var(--blanco);
     font-weight: bold;
     margin-bottom: .5rem;
     display: block;
}
.campo textarea {
    height: 18rem;
}
.input-text {
    width: 100%;
    border: none;
    padding: 1.5rem;
    border-radius: .5rem;
}
.w-100 { /** width del 100% **/
    width: 100%;
}
@media (min-width: 768   px) {
    .w-100 {
        width: auto;
    }
}
.flex {
    display: flex;
}
.alinear-derecha {
    justify-content: flex-end;
}
.footer {
    text-align: center;
}